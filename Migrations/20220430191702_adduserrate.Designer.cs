// <auto-generated />
using System;
using FinalProjectAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProjectAPI.Migrations
{
    [DbContext(typeof(FinalProjectAPIContext))]
    [Migration("20220430191702_adduserrate")]
    partial class adduserrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinalProjectAPI.Models.Movie", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Moviesid")
                        .HasColumnType("int");

                    b.Property<string>("crew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imDbRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imDbRatingCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Moviesid");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Movies", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("errorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Serie", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Seriesid")
                        .HasColumnType("int");

                    b.Property<string>("crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imDbRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imDbRatingCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Seriesid");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.seriedetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("episodelength")
                        .HasColumnType("int");

                    b.Property<string>("episodename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serieid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("serieid");

                    b.ToTable("Seriedetail");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Series", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("errorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.UserRate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("movieid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("movieid");

                    b.ToTable("userRates");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Movie", b =>
                {
                    b.HasOne("FinalProjectAPI.Models.Movies", "Movies")
                        .WithMany("items")
                        .HasForeignKey("Moviesid");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Serie", b =>
                {
                    b.HasOne("FinalProjectAPI.Models.Series", "Series")
                        .WithMany("items")
                        .HasForeignKey("Seriesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.seriedetail", b =>
                {
                    b.HasOne("FinalProjectAPI.Models.Serie", "serie")
                        .WithMany("seriedetail")
                        .HasForeignKey("serieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("serie");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.UserRate", b =>
                {
                    b.HasOne("FinalProjectAPI.Models.Movie", "movie")
                        .WithMany("userrate")
                        .HasForeignKey("movieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("movie");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Movie", b =>
                {
                    b.Navigation("userrate");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Movies", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Serie", b =>
                {
                    b.Navigation("seriedetail");
                });

            modelBuilder.Entity("FinalProjectAPI.Models.Series", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
